import logging
import os
import random
from aiogram import Bot, Dispatcher, types
from aiogram.webhook.aiohttp_server import SimpleRequestHandler
from aiohttp import web

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
API_TOKEN = os.getenv('BOT_TOKEN')
WEBHOOK_URL = os.getenv('WEBHOOK_URL')

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if not API_TOKEN or not WEBHOOK_URL:
    raise ValueError("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –∏ WEBHOOK_URL")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
WEBAPP_HOST = '0.0.0.0'
WEBAPP_PORT = int(os.getenv('PORT', 10000))

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN, parse_mode='HTML')
dp = Dispatcher()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π: —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 50% –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—É—é —Ä–µ–∞–∫—Ü–∏—é
@dp.message()
async def handle_message(message: types.Message):
    if random.random() < 0.5:
        # –°–ø–∏—Å–æ–∫ —Å–ª—É—á–∞–π–Ω—ã—Ö —Ä–µ–∞–∫—Ü–∏–π (—ç–º–æ–¥–∑–∏)
        reactions = [
        "üëç", "üëé", "‚ù§", "üî•", 
        "ü•∞", "üëè", "üòÅ", "ü§î",
        "ü§Ø", "üò±", "ü§¨", "üò¢",
        "üéâ", "ü§©", "ü§Æ", "üí©",
        "üôè", "üëå", "üïä", "ü§°",
        "ü•±", "ü•¥", "üòç", "üê≥",
        "‚ù§‚Äçüî•", "üåö", "üå≠", "üíØ",
        "ü§£", "‚ö°", "üçå", "üèÜ",
        "üíî", "ü§®", "üòê", "üçì",
        "üçæ", "üíã", "üñï", "üòà",
        "üò¥", "üò≠", "ü§ì", "üëª",
        "üë®‚Äçüíª", "üëÄ", "üéÉ", "üôà",
        "üòá", "üò®", "ü§ù", "‚úç",
        "ü§ó", "ü´°", "üéÖ", "üéÑ",
        "‚òÉ", "üíÖ", "ü§™", "üóø",
        "üÜí", "üíò", "üôâ", "ü¶Ñ",
        "üòò", "üíä", "üôä", "üòé",
        "üëæ", "ü§∑‚Äç‚ôÇ", "ü§∑", "ü§∑‚Äç‚ôÄ",
        "üò°"
    ]
        reaction = random.choice(reactions)
        await message.reply(reaction)

# –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±—Ö—É–∫
async def on_startup(app: web.Application):
    logging.info("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞...")
    await bot.set_webhook(WEBHOOK_URL)
    logging.info(f"–í–µ–±—Ö—É–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}")

# –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: —É–¥–∞–ª—è–µ–º –≤–µ–±—Ö—É–∫ –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é
async def on_shutdown(app: web.Application):
    logging.info("–£–¥–∞–ª–µ–Ω–∏–µ –≤–µ–±—Ö—É–∫–∞...")
    await bot.delete_webhook()
    await bot.session.close()

# –°–æ–∑–¥–∞–µ–º –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –±–∞–∑–µ aiohttp
app = web.Application()
# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –ø–æ –ø—É—Ç–∏ /webhook
SimpleRequestHandler(dispatcher=dp, bot=bot).register(app, path='/webhook')

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ —Å—Ç–∞—Ä—Ç–∞ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
app.on_startup.append(on_startup)
app.on_shutdown.append(on_shutdown)

if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)
    web.run_app(app, host=WEBAPP_HOST, port=WEBAPP_PORT)

